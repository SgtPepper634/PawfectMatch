# Generated by Django 4.2.1 on 2023-05-22 19:52

import django.contrib.postgres.fields
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_user_address1_user_address2_user_care_preference_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.CharField(max_length=255)),
                ('organization_animal_id', models.CharField(max_length=50)),
                ('url', models.URLField()),
                ('type', models.CharField(choices=[('Dog', 'DOG'), ('Cat', 'CAT')], max_length=255)),
                ('species', models.CharField(choices=[('Dog', 'DOG'), ('Cat', 'CAT')], max_length=255)),
                ('primary_breed', models.CharField(choices=[('Labrador Retriever', 'LABRADOR_RETRIEVER'), ('German Shepherd', 'GERMAN_SHEPHERD'), ('Golden Retriever', 'GOLDEN_RETRIEVER'), ('French Bulldog', 'FRENCH_BULLDOG'), ('Beagle', 'BEAGLE'), ('Bulldog', 'BULLDOG'), ('Poodle', 'POODLE'), ('Rottweiler', 'ROTTWEILER'), ('Yorkshire Terrier', 'YORKSHIRE_TERRIER'), ('Boxer', 'BOXER'), ('Siberian Husky', 'SIBERIAN_HUSKY'), ('Dachshund', 'DACHSHUND'), ('Shih Tzu', 'SHIH_TZU'), ('Great Dane', 'GREAT_DANE'), ('Chihuahua', 'CHIHUAHUA'), ('Boston Terrier', 'BOSTON_TERRIER'), ('Pomeranian', 'POMERANIAN'), ('Doberman Pinscher', 'DOBERMAN_PINSCHER'), ('Shetland Sheepdog', 'SHETLAND_SHEEPDOG'), ('Bichon Frise', 'BICHON_FRISE'), ('Border Collie', 'BORDER_COLLIE'), ('Pitbull', 'PITBULL'), ('Cavalier King Charles Spaniel', 'CAVALIER_KING_CHARLES_SPANIEL'), ('Australian Shepherd', 'AUSTRALIAN_SHEPHERD'), ('Shar Pei', 'SHAR_PEI'), ('Jack Russell Terrier', 'JACK_RUSSELL_TERRIER'), ('Alaskan Malamute', 'ALASKAN_MALAMUTE'), ('Bloodhound', 'BLOODHOUND'), ('West Highland White Terrier', 'WEST_HIGHLAND_WHITE_TERRIER'), ('Basset Hound', 'BASSET_HOUND'), ('Staffordshire Bull Terrier', 'STAFFORDSHIRE_BULL_TERRIER'), ('Weimaraner', 'WEIMARANER'), ('Shiba Inu', 'SHIBA_INU'), ('Borzoi', 'BORZOI'), ('Whippet', 'WHIPPET'), ('Maltese', 'MALTESE'), ('Akita', 'AKITA'), ('Cavoodle', 'CAVOODLE'), ('Chow Chow', 'CHOW_CHOW'), ('Pug', 'PUG'), ('Papillon', 'PAPILLON'), ('Samoyed', 'SAMOYED'), ('Lhasa Apso', 'LHASA_APSO'), ('Greyhound', 'GREYHOUND'), ('Old English Sheepdog', 'OLD_ENGLISH_SHEEPDOG'), ('Irish Setter', 'IRISH_SETTER'), ('Newfoundland', 'NEWFOUNDLAND'), ('Miniature Schnauzer', 'MINIATURE_SCHNAUZER'), ('Afghan Hound', 'AFGHAN_HOUND'), ('Chinese Crested', 'CHINESE_CRESTED'), ('Irish Wolfhound', 'IRISH_WOLFHOUND')], max_length=50)),
                ('secondary_breed', models.CharField(blank=True, choices=[('Labrador Retriever', 'LABRADOR_RETRIEVER'), ('German Shepherd', 'GERMAN_SHEPHERD'), ('Golden Retriever', 'GOLDEN_RETRIEVER'), ('French Bulldog', 'FRENCH_BULLDOG'), ('Beagle', 'BEAGLE'), ('Bulldog', 'BULLDOG'), ('Poodle', 'POODLE'), ('Rottweiler', 'ROTTWEILER'), ('Yorkshire Terrier', 'YORKSHIRE_TERRIER'), ('Boxer', 'BOXER'), ('Siberian Husky', 'SIBERIAN_HUSKY'), ('Dachshund', 'DACHSHUND'), ('Shih Tzu', 'SHIH_TZU'), ('Great Dane', 'GREAT_DANE'), ('Chihuahua', 'CHIHUAHUA'), ('Boston Terrier', 'BOSTON_TERRIER'), ('Pomeranian', 'POMERANIAN'), ('Doberman Pinscher', 'DOBERMAN_PINSCHER'), ('Shetland Sheepdog', 'SHETLAND_SHEEPDOG'), ('Bichon Frise', 'BICHON_FRISE'), ('Border Collie', 'BORDER_COLLIE'), ('Pitbull', 'PITBULL'), ('Cavalier King Charles Spaniel', 'CAVALIER_KING_CHARLES_SPANIEL'), ('Australian Shepherd', 'AUSTRALIAN_SHEPHERD'), ('Shar Pei', 'SHAR_PEI'), ('Jack Russell Terrier', 'JACK_RUSSELL_TERRIER'), ('Alaskan Malamute', 'ALASKAN_MALAMUTE'), ('Bloodhound', 'BLOODHOUND'), ('West Highland White Terrier', 'WEST_HIGHLAND_WHITE_TERRIER'), ('Basset Hound', 'BASSET_HOUND'), ('Staffordshire Bull Terrier', 'STAFFORDSHIRE_BULL_TERRIER'), ('Weimaraner', 'WEIMARANER'), ('Shiba Inu', 'SHIBA_INU'), ('Borzoi', 'BORZOI'), ('Whippet', 'WHIPPET'), ('Maltese', 'MALTESE'), ('Akita', 'AKITA'), ('Cavoodle', 'CAVOODLE'), ('Chow Chow', 'CHOW_CHOW'), ('Pug', 'PUG'), ('Papillon', 'PAPILLON'), ('Samoyed', 'SAMOYED'), ('Lhasa Apso', 'LHASA_APSO'), ('Greyhound', 'GREYHOUND'), ('Old English Sheepdog', 'OLD_ENGLISH_SHEEPDOG'), ('Irish Setter', 'IRISH_SETTER'), ('Newfoundland', 'NEWFOUNDLAND'), ('Miniature Schnauzer', 'MINIATURE_SCHNAUZER'), ('Afghan Hound', 'AFGHAN_HOUND'), ('Chinese Crested', 'CHINESE_CRESTED'), ('Irish Wolfhound', 'IRISH_WOLFHOUND')], max_length=50, null=True)),
                ('mixed_breed', models.BooleanField(default=False)),
                ('unknown_breed', models.BooleanField(default=False)),
                ('primary_color', models.CharField(choices=[('Apricot / Beige', 'APRICOT'), ('Bicolor', 'BICOLOR'), ('Black', 'BLACK'), ('Brindle', 'BRINDLE'), ('Brown / Chocolate', 'BROWN'), ('Golden', 'GOLDEN'), ('Gray / Blue / Silver', 'GRAY'), ('Harlequin', 'HARLEQUIN'), ('Merle (Blue)', 'MERLE_BLUE'), ('Merle (Red)', 'MERLE_RED'), ('Red / Chestnut / Orange', 'RED'), ('Sable', 'SABLE'), ('Tricolor (Brown Black & White)', 'TRICOLOR'), ('White / Cream', 'WHITE'), ('Yellow / Tan / Blond / Fawn', 'YELLOW')], max_length=50)),
                ('secondary_color', models.CharField(blank=True, choices=[('Apricot / Beige', 'APRICOT'), ('Bicolor', 'BICOLOR'), ('Black', 'BLACK'), ('Brindle', 'BRINDLE'), ('Brown / Chocolate', 'BROWN'), ('Golden', 'GOLDEN'), ('Gray / Blue / Silver', 'GRAY'), ('Harlequin', 'HARLEQUIN'), ('Merle (Blue)', 'MERLE_BLUE'), ('Merle (Red)', 'MERLE_RED'), ('Red / Chestnut / Orange', 'RED'), ('Sable', 'SABLE'), ('Tricolor (Brown Black & White)', 'TRICOLOR'), ('White / Cream', 'WHITE'), ('Yellow / Tan / Blond / Fawn', 'YELLOW')], max_length=50, null=True)),
                ('tertiary_color', models.CharField(blank=True, choices=[('Apricot / Beige', 'APRICOT'), ('Bicolor', 'BICOLOR'), ('Black', 'BLACK'), ('Brindle', 'BRINDLE'), ('Brown / Chocolate', 'BROWN'), ('Golden', 'GOLDEN'), ('Gray / Blue / Silver', 'GRAY'), ('Harlequin', 'HARLEQUIN'), ('Merle (Blue)', 'MERLE_BLUE'), ('Merle (Red)', 'MERLE_RED'), ('Red / Chestnut / Orange', 'RED'), ('Sable', 'SABLE'), ('Tricolor (Brown Black & White)', 'TRICOLOR'), ('White / Cream', 'WHITE'), ('Yellow / Tan / Blond / Fawn', 'YELLOW')], max_length=50, null=True)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('Male', 'MALE'), ('Female', 'FEMALE')], max_length=50)),
                ('size', models.CharField(choices=[('small', 'SMALL'), ('medium', 'MEDIUM'), ('large', 'LARGE'), ('xlarge', 'EXTRA_LARGE')], max_length=50)),
                ('coat', models.CharField(choices=[('Short', 'SHORT'), ('Medium', 'MEDIUM'), ('Long', 'LONG'), ('Wire', 'WIRE'), ('Curly', 'CURLY'), ('Hairless', 'HAIRLESS')], max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('primary_photo_small', models.URLField()),
                ('primary_photo_medium', models.URLField()),
                ('primary_photo_large', models.URLField()),
                ('primary_photo_full', models.URLField()),
                ('photos', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), blank=True, default=None, null=True, size=None)),
                ('videos', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, null=True, size=None)),
                ('status', models.CharField(choices=[('adoptable', 'ADOPTABLE'), ('adopted', 'ADOPTED'), ('fosterable', 'FOSTERABLE'), ('fostered', 'FOSTERED')], max_length=50)),
                ('spayed_neutered', models.BooleanField()),
                ('house_trained', models.BooleanField()),
                ('declawed', models.BooleanField()),
                ('special_needs', models.BooleanField(null=True)),
                ('shots_current', models.BooleanField()),
                ('good_with_children', models.BooleanField(null=True)),
                ('good_with_dogs', models.BooleanField(null=True)),
                ('good_with_cats', models.BooleanField(null=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('address1', models.CharField(max_length=255, null=True)),
                ('address2', models.CharField(max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('postcode', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='address1',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='user',
            name='address2',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='user',
            name='city',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='preferred_cat_characteristics',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('SMALL', 'Small'), ('MEDIUM', 'Medium'), ('LARGE', 'Large'), ('SHORT_HAIRED', 'Short-haired'), ('LONG_HAIRED', 'Long-haired'), ('DOUBLE_COATED', 'Double-coated'), ('SINGLE_COATED', 'Single-coated'), ('CURLY', 'Curly'), ('STRAIGHT', 'Straight'), ('BLACK', 'Black'), ('WHITE', 'White'), ('GREY', 'Grey'), ('BROWN', 'Brown'), ('ORANGE', 'Orange'), ('CALICO', 'Calico'), ('TORTOISESHELL', 'Tortoiseshell'), ('TABBY', 'Tabby'), ('SIAMESE', 'Siamese'), ('PERSIAN', 'Persian'), ('BENGAL', 'Bengal'), ('RAGDOLL', 'Ragdoll'), ('SPHYNX', 'Sphynx')], max_length=100), blank=True, default=None, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='user',
            name='state',
            field=models.CharField(max_length=255),
        ),
    ]
